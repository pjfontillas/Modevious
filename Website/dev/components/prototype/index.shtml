<!--#include virtual="/include/links.htm" -->
  <title>Components | Prototype</title>
</head>
<body>
<!--#include virtual="/include/navigation.htm" -->
  <div id="core">
    <div class="full">
      <img src="images/prototype.jpg" alt="Prototype JS" width="960" height="320" />        
          <div class="padded">
            <h3>Prototype JavaScript framework</h3>
            <h4>Latest Version: 1.6.1</h4>
            <ul>
              <li>
                <h3><a href="http://www.prototypejs.org/learn/introduction-to-ajax">Introduction to Ajax</a></h3>
                <div>
                  <p>Prototype framework enables you to deal with Ajax calls in a very easy and fun way that is also safe (cross-browser). Besides simple requests, this module also deals in a smart way with JavaScript code returned from a server and provides helper classes for polling.</p>
                </div>
              </li>
              <li>
                <h3><a href="http://www.prototypejs.org/learn/extensions">How Prototype extends the DOM</a></h3>
                <div>
                  <p>The biggest part of the Prototype framework are its DOM extensions. Prototype adds many convenience methods to elements returned by the $() function: for instance, you can write $('comments').addClassName('active').show() to get the element with the ID 'comments', add a class name to it and show it (if it was previously hidden). The 'comments' element didn't have those methods in native JavaScript; how is this possible? This document reveals some clever hacks found in Prototype.</p>
                </div>
                </li>
              <li>
                <h3><a href="http://www.prototypejs.org/learn/json">Introduction to JSON</a></h3>
                <div>
                  <p>JSON (JavaScript Object Notation) is a lightweight data-interchange format(if you are new to JSON, you can   read more about it on the <a href="http://www.json.org">JSON website</a>). It is notably used by APIs all over the web and is a fast alternative to XML in Ajax requests. Prototype 1.5.1 finally features JSON encoding and parsing support.</p>
                </div>
                </li>
              <li>
                <h3><a href="http://www.prototypejs.org/learn/class-inheritance">Defining classes and inheritance</a></h3>
                <div>
                  <p>In the early versions of Prototype, the framework came with basic support for class creation: the <a href="http://www.prototypejs.org/api/class/create">Class.create()</a> method. Until now the <em>only</em> feature of classes defined this way was that the constructor called a method called initialize automatically. <strong>Prototype 1.6.0</strong> now comes with inheritance support through the Class module, which has taken several steps further since the last version; you can make richer classes in your code with more ease than before.</p>
                  </div>
                </li>
            </ul>
            <div class="ui-widget">
                <div class="ui-state-highlight padded">
                  <p class="text-center"><span class="ui-icon ui-icon-info float-left"></span><strong>The above information is taken directly from <a href="http://www.prototypejs.org/">Prototype's website</a>.</strong></p>
                </div>
            </div>
            </div>
    </div>   
    <div class="clear-float"></div>            
  </div><!-- End #core -->
<!--#include virtual="/include/footer.htm" -->
</body>
</html>
